{"ast":null,"code":"var _jsxFileName = \"C:\\\\react\\\\multilanguage-app\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport $ from 'jquery';\nimport logo from \"./logo.svg\";\nimport './App.css';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      lang: 'en',\n      languages: []\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({\n      lang: event.target.value\n    }, this.getLanguageData);\n  }\n\n  getLanguageData() {\n    $.ajax({\n      url: 'http://localhost:3000/testFile.json',\n      dataType: 'json',\n      cache: false,\n      success: function (data) {\n        this.setState({\n          languages: data.language\n        });\n      }.bind(this),\n      error: function (xhr, status, err) {\n        console.log(err);\n      }\n    });\n  }\n\n  componentDidMount() {\n    console.log('aqui');\n    this.getLanguageData();\n  }\n\n  render() {\n    var lang = this.state.lang;\n    var languagesSelect = this.state.languages.map(lng => React.createElement(\"option\", {\n      key: lng.id,\n      value: lng.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, lng.name));\n\n    if (this.state.languages !== undefined) {\n      var message = this.state.languages[this.state.lang]['message'];\n    }\n\n    console.log(this.state.languages);\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(\"header\", {\n      className: \"App-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: logo,\n      className: \"App-logo\",\n      alt: \"logo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, message), React.createElement(\"a\", {\n      className: \"App-link\",\n      href: \"https://reactjs.org\",\n      target: \"_blank\",\n      rel: \"noopener noreferrer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \"Learn React\"), React.createElement(\"select\", {\n      onChange: this.handleChange,\n      value: lang,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, languagesSelect)));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:\\react\\multilanguage-app\\src\\App.js"],"names":["React","Component","$","App","constructor","state","lang","languages","handleChange","bind","event","setState","target","value","getLanguageData","ajax","url","dataType","cache","success","data","language","error","xhr","status","err","console","log","componentDidMount","render","languagesSelect","map","lng","id","name","undefined","message","logo"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport $ from 'jquery';\nimport logo from './logo.svg';\nimport './App.css';\n\nclass App extends Component {\n  constructor(){\n   super();\n   this.state = {\n     lang: 'en',\n     languages:[]\n   }\n   this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(event){\n    this.setState({lang: event.target.value}, this.getLanguageData);\n  }\n\n  getLanguageData(){\n    $.ajax({\n      url:'http://localhost:3000/testFile.json',\n      dataType:'json',\n      cache: false,\n      success: function(data){\n       this.setState({languages: data.language});\n\n\n\n      }.bind(this),\n      error: function(xhr, status, err){\n        console.log(err);\n      }\n    });\n  }\n\n  componentDidMount() {\n    console.log('aqui');\n    this.getLanguageData();\n  }\n\n  render(){\n\n      var lang = this.state.lang;\n      var languagesSelect = this.state.languages.map((lng) =>\n          <option key={lng.id} value={lng.id}>{lng.name}</option>\n      );\n\n      if(this.state.languages !== undefined){\n        var message =  this.state.languages[this.state.lang]['message'];\n      }\n      console.log(this.state.languages);\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <p>\n            {message}\n          </p>\n          <a\n            className=\"App-link\"\n            href=\"https://reactjs.org\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Learn React\n          </a>\n          <select onChange={this.handleChange} value={lang}>\n              {languagesSelect}\n          </select>\n        </header>\n      </div>\n    );\n  };\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}